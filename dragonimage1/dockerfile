# Build new image depending on python image latest
FROM ubuntu:latest

# Identify the maintainer of the image
LABEL version="0.0.1"
LABEL maintainer="godric.phoenix@gmail.com"

# Install required dependencies
RUN apt-get update && \
    apt-get install -y wget alien libaio1 python3 python3-pip unixodbc odbcinst unzip && \
    rm -rf /var/lib/apt/lists/*

# Set ACCEPT_EULA environment variable
ENV ACCEPT_EULA=Y
ENV SA_PASSWORD=P@ssw0rd

# Download the Oracle Instant Client RPM package
RUN wget https://download.oracle.com/otn_software/linux/instantclient/2113000/oracle-instantclient-basic-21.13.0.0.0-1.el8.x86_64.rpm \
    --header="Cookie: oraclelicense=accept-securebackup-cookie" \
    -O /tmp/oracle-instantclient-basic-21.13.0.0.0-1.x86_64.rpm

# Install the RPM package using alien
RUN alien -i /tmp/oracle-instantclient-basic-21.13.0.0.0-1.x86_64.rpm --scripts && \
    rm -f /tmp/oracle-instantclient-basic-21.13.0.0.0-1.x86_64.rpm

# Set up environment variables
ENV LD_LIBRARY_PATH=/usr/lib/oracle/21/client64/lib:$LD_LIBRARY_PATH
ENV PATH=/usr/lib/oracle/21/client64/bin:$PATH

# Set up environment variables for Python
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Download and install required dependencies for Google Chrome
RUN apt-get update && \
    apt-get install -y \
        fonts-liberation \
        libasound2 \
        libatk-bridge2.0-0 \
        libatk1.0-0 \
        libatspi2.0-0 \
        libcairo2 \
        libcups2 \
        libcurl4 \
        libdrm2 \
        libgbm1 \
        libglib2.0-0 \
        libgtk-3-0 \
        libnspr4 \
        libnss3 \
        libpango-1.0-0 \
        libu2f-udev \
        libvulkan1 \
        libxcomposite1 \
        libxdamage1 \
        libxext6 \
        libxfixes3 \
        libxkbcommon0 \
        libxrandr2 \
        xdg-utils && \
    rm -rf /var/lib/apt/lists/*

# Download and install Google Chrome
RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O /tmp/google-chrome-stable_current_amd64.deb && \
    apt-get install -y /tmp/google-chrome-stable_current_amd64.deb && \
    rm -f /tmp/google-chrome-stable_current_amd64.deb

# Download chromedriver and move it to /usr/local/bin
RUN wget https://storage.googleapis.com/chrome-for-testing-public/122.0.6261.69/linux64/chrome-linux64.zip -O /tmp/chromedriver_linux64.zip && \
    unzip -o /tmp/chromedriver_linux64.zip -d /usr/local/bin && \
    rm -f /tmp/chromedriver_linux64.zip


# Download the ODBC driver package
RUN wget https://packages.microsoft.com/ubuntu/22.10/prod/pool/main/m/msodbcsql18/msodbcsql18_18.2.1.1-1_amd64.deb -O /tmp/msodbcsql18_18.2.1.1-1_amd64.deb

# Install the ODBC driver package
RUN dpkg -i /tmp/msodbcsql18_18.2.1.1-1_amd64.deb

# Set up ODBC configuration if needed
# COPY odbc.ini /etc/odbc.ini
# COPY odbcinst.ini /etc/odbcinst.ini

# Install required dependencies
# RUN apt-get update && \
#     apt-get install -y wget gnupg2 && \
#     wget https://packages.microsoft.com/keys/microsoft.asc -O /etc/apt/trusted.gpg.d/microsoft.asc && \
#     wget https://packages.microsoft.com/config/ubuntu/20.04/prod.list -O /etc/apt/sources.list.d/mssql-release.list && \
#     apt-get update && \
#     apt-get install -y unixodbc unixodbc-dev && \
#     apt-get install -y msodbcsql17

# Set up environment variables for ODBC Driver
ENV ODBCINI=/etc/odbc.ini
ENV ODBCSYSINI=/etc

# Add ODBC Driver to the odbc.ini
RUN echo "[MSSQL]" >> /etc/odbc.ini && \
    echo "Driver = ODBC Driver 22 for SQL Server" >> /etc/odbc.ini

# Create  a directory for our application code and set it as
RUN  mkdir /app 

# Set work directory to /app
WORKDIR /app

# Add requirements.txt file to the container
ADD ./requirements.txt /app/

# Install all dependencies listed in requirements.txt
RUN pip3 install --upgrade pip && pip3 install --no-cache-dir -r requirements.txt

# Copy the rest of the project's
ADD ./app.py /app/

CMD [ "python3","app.py" ]